// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"github.com/stretchr/testify/mock"

	"github.com/avpalienko/gonextcloud"
)

// Notifications is an autogenerated mock type for the Notifications type
type Notifications struct {
	mock.Mock
}

// AdminAvailable provides a mock function with given fields:
func (_m *Notifications) AdminAvailable() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Available provides a mock function with given fields:
func (_m *Notifications) Available() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Create provides a mock function with given fields: userID, title, message
func (_m *Notifications) Create(userID string, title string, message string) error {
	ret := _m.Called(userID, title, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(userID, title, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *Notifications) Delete(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteAll provides a mock function with given fields:
func (_m *Notifications) DeleteAll() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: id
func (_m *Notifications) Get(id int) (gonextcloud.Notification, error) {
	ret := _m.Called(id)

	var r0 gonextcloud.Notification
	if rf, ok := ret.Get(0).(func(int) gonextcloud.Notification); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(gonextcloud.Notification)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields:
func (_m *Notifications) List() ([]gonextcloud.Notification, error) {
	ret := _m.Called()

	var r0 []gonextcloud.Notification
	if rf, ok := ret.Get(0).(func() []gonextcloud.Notification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]gonextcloud.Notification)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
