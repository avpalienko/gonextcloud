// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"github.com/stretchr/testify/mock"

	"github.com/avpalienko/gonextcloud"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Apps provides a mock function with given fields:
func (_m *Client) Apps() gonextcloud.Apps {
	ret := _m.Called()

	var r0 gonextcloud.Apps
	if rf, ok := ret.Get(0).(func() gonextcloud.Apps); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.Apps)
		}
	}

	return r0
}

// AppsConfig provides a mock function with given fields:
func (_m *Client) AppsConfig() gonextcloud.AppsConfig {
	ret := _m.Called()

	var r0 gonextcloud.AppsConfig
	if rf, ok := ret.Get(0).(func() gonextcloud.AppsConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.AppsConfig)
		}
	}

	return r0
}

// GroupFolders provides a mock function with given fields:
func (_m *Client) GroupFolders() gonextcloud.GroupFolders {
	ret := _m.Called()

	var r0 gonextcloud.GroupFolders
	if rf, ok := ret.Get(0).(func() gonextcloud.GroupFolders); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.GroupFolders)
		}
	}

	return r0
}

// Groups provides a mock function with given fields:
func (_m *Client) Groups() gonextcloud.Groups {
	ret := _m.Called()

	var r0 gonextcloud.Groups
	if rf, ok := ret.Get(0).(func() gonextcloud.Groups); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.Groups)
		}
	}

	return r0
}

// Login provides a mock function with given fields: username, password
func (_m *Client) Login(username string, password string) error {
	ret := _m.Called(username, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(username, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Logout provides a mock function with given fields:
func (_m *Client) Logout() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Notifications provides a mock function with given fields:
func (_m *Client) Notifications() gonextcloud.Notifications {
	ret := _m.Called()

	var r0 gonextcloud.Notifications
	if rf, ok := ret.Get(0).(func() gonextcloud.Notifications); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.Notifications)
		}
	}

	return r0
}

// Shares provides a mock function with given fields:
func (_m *Client) Shares() gonextcloud.Shares {
	ret := _m.Called()

	var r0 gonextcloud.Shares
	if rf, ok := ret.Get(0).(func() gonextcloud.Shares); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.Shares)
		}
	}

	return r0
}

// Users provides a mock function with given fields:
func (_m *Client) Users() gonextcloud.Users {
	ret := _m.Called()

	var r0 gonextcloud.Users
	if rf, ok := ret.Get(0).(func() gonextcloud.Users); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gonextcloud.Users)
		}
	}

	return r0
}
